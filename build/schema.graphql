type DepositEventPool @entity {
  id: ID!
  from: Bytes!
  inTokenU: BigInt!
  outTokenPULP: BigInt!
  hash: String!
}

type WithdrawEventPool @entity {
  id: ID!
  from: Bytes!
  inTokenS: BigInt!
  outTokenS: BigInt!
  hash: String!
}

type BuyEventPool @entity {
  id: ID!
  from: Bytes!
  inTokenS: BigInt!
  outTokenU: BigInt!
  hash: String!
  premium: BigInt!
}

type MintEventOption @entity {
  id: ID!
  from: Bytes!
  outTokenP: BigInt!
  outTokenR: BigInt!
  hash: String!
}

type SwapEventOption @entity {
  id: ID!
  from: Bytes!
  outTokenU: BigInt!
  inTokenS: BigInt!
  hash: String!
}

type RedeemEventOption @entity {
  id: ID!
  from: Bytes!
  inTokenR: BigInt!
  hash: String!
}

type CloseEventOption @entity {
  id: ID!
  from: Bytes!
  inTokenP: BigInt!
  hash: String!
}

type FundEventOption @entity {
  id: ID!
  cacheU: BigInt!
  cacheS: BigInt!
  cacheR: BigInt!
  hash: String!
}

type OptionFactory @entity {
  # factory address
  id: ID!

  # factory info
  optionCount: Int!
  marketCount: Int!

  # transactions
  txCount: BigInt!
}

type Option @entity {
  # pair address
  id: ID!

  # option info
  expiry: Int!
  underlyingToken: Token!
  strikeToken: Token!
  redeemToken: Token!
}

type Token @entity {
  # token address
  id: ID!

  # mirrored from the smart contract
  symbol: String!
  name: String!
  decimals: BigInt!

  # extra info needed for other parts of subgraph
  kind: TokenKind!
}

enum TokenKind {
  OPTION
  REDEEM
  OTHER
}

type OptionPair @entity {
  # uniswap pair address
  id: ID!

  # tokens
  short: Token! # redeem token
  underlying: Token!

  # uniswap reserves
  reserveShort: BigDecimal!
  reserveUnderlying: BigDecimal!

  # not sure
  longDepth: BigDecimal!

  # stats
  shortVolume: BigDecimal!
  underlyingVolume: BigDecimal!
  txCount: BigInt!
  liquidityProviderCount: BigInt!

  # details
  createdAtTimestamp: Int!
  createdAtBlockNumber: BigInt!
}
